// clock_calibration
//
// Use the input capture mode of the ATMEGA328 counter1 to precisely 
// compare a to-be-adjusted 1 pulse-per-second signal against a known-good
// one pps signal (say from a gps receiver), and display the difference
// between the two as a bar graph where each bar corresponds to 1 ppm 
// (or better) difference between the two.
//
// At March 11, 2012 the development has progressed to having the basic
// function as described working. A clock using a PCF8563 I2C rtc chip,
// with an I2C 16X2 LCD display and various bells and whistles was 
// developed separately, then the input-capture interrupt handlers and
// bar graph display (also separate development) were added. The initial
// hardware interface uses the 1 pps output from the clock chip as both
// the reference and to-be-adjusted inputs--the falling edge triggers the
// IC interrupt, and the rising edge triggers external interrupt 0. The
// display shows the difference (in .5 ppm bars) between the (accurate)
// IC input--pin 8--time interval and the external interrupt0--pin 2--
// time interval, as well as the clock's time, date, and alarm functions.
//
// At March 19, 2012 a second clock board has been built to serve as the
// 'clock-to-be-adjusted' while the original clock chip serves as the
// reference 1 pps input. As well, the following software features have
// been added:
//  - The clock setting functions have been made to work entirely from
//    the (16-key) keypad. The 'set time/date' key is the '+' key, the
//    'set alarm' key is the '-', and a 'set scale' is added on the '*'
//    key. Holding the key down for .6 seconds enters the setting mode
//    for that parameter, then pressing the same key briefly exits. This
//    operation replaces the holding down an external switches on pins 3
//    and 4.
//  - The bargraph display now has four scale settings selected by the
//    digits 0, 2, 5, or 8. The zero entry sets the timer prescaler to 1
//    and thus the bargraph is at maximum sensitivity of 1/16 ppm per bar.
//    2 selects 2 ppm per bar by choosing prescaler to divide by 8, and
//    then the interval comparison difference is divided by 4 (>>2). 5
//    (0.5) selects .5 ppm per bar--prescaler /8. 8 selects 8 ppm/bar.
//  - The bargraph displays the scale selection with a tiny v, 5, 2, or
//    8 above the centre-zero tick corresponding to 1/16, 0.5, 2, or 8
//    ppm per bar respectively.
// Using the external interrupt for the 'to-be-adjusted' input is not
// really satisfactory since other interrupt activity (serial, timer0)
// causes the display to occasionally show large differences. A second
// 'input capture' input is needed. Alternatively, using the analog
// comparator to trigger timer1 input capture may allow alternating
// between the reference 1 pps and the 'to-be-adjusted' input.
//
// At March 23, 2012. The measure input pulse-per-second signal now comes
// in on pin digital 7 which is configured as input AIN1 for the analog
// comparator. The comparator is setup with the bandgap reference on its
// AIN0 input (pin digital 6, is thus not available?--not sure), and the
// comparator output is enabled to generate an IC signal. The loop 
// routines now switch between the reference input (on pin 8) and the
// measure input (pin 7) by defining a 'calmode' keypad key (the = key).
// As with the other keypad setting operations, holding the key down for
// .6 seconds enables the calibrate mode, where the reference input is
// selected and the display shows the (hex) value read by the input
// captures. When the '=' key is pressed again, the cal mode is exited
// and the bargraph shows the difference between the saved reference
// count and the measure input captured values. The active input is 
// further indicated by flashing pin 13 for ref input, pin 10 for the meas
// input on detecting the input capture interrupt. Finally, the 'setscale'
// operation exits by setting up entry to the 'cal' mode because after the
// scale changes, the reference input count saved may no longer be right--
// when the clock divisor is changed by choosing the scale.
//

